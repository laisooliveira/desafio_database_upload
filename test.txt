yarn run v1.21.1
$ cross-env NODE_ENV=test jest
  console.log src/__tests__/Transaction.spec.ts:78
    Response {
      _events: {},
      _eventsCount: 0,
      _maxListeners: undefined,
      res:
       IncomingMessage {
         _readableState:
          ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { length: 0 },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: true,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            emitClose: true,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: true,
            decoder: [StringDecoder],
            encoding: 'utf8' },
         readable: false,
         _events:
          { end: [Array],
            data: [Array],
            error: [Array],
            close: [Function: bound emit] },
         _eventsCount: 4,
         _maxListeners: undefined,
         socket:
          Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(asyncId)]: 533,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0 },
         connection:
          Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(asyncId)]: 533,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0 },
         httpVersionMajor: 1,
         httpVersionMinor: 1,
         httpVersion: '1.1',
         complete: true,
         headers:
          { 'x-powered-by': 'Express',
            'content-type': 'application/json; charset=utf-8',
            'content-length': '73',
            etag: 'W/"49-b03SHY8pYeZ89ZokpjIWN0uHmT4"',
            date: 'Sun, 16 Aug 2020 23:30:31 GMT',
            connection: 'close' },
         rawHeaders:
          [ 'X-Powered-By',
            'Express',
            'Content-Type',
            'application/json; charset=utf-8',
            'Content-Length',
            '73',
            'ETag',
            'W/"49-b03SHY8pYeZ89ZokpjIWN0uHmT4"',
            'Date',
            'Sun, 16 Aug 2020 23:30:31 GMT',
            'Connection',
            'close' ],
         trailers: {},
         rawTrailers: [],
         aborted: false,
         upgrade: false,
         url: '',
         method: null,
         statusCode: 200,
         statusMessage: 'OK',
         client:
          Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(asyncId)]: 533,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0 },
         _consuming: false,
         _dumped: false,
         req:
          ClientRequest {
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: true,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: false,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: 73,
            _hasBody: true,
            _trailer: '',
            finished: true,
            _headerSent: true,
            socket: [Socket],
            connection: [Socket],
            _header:
             'POST /transactions HTTP/1.1\r\nHost: 127.0.0.1:45577\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 73\r\nConnection: close\r\n\r\n',
            _onPendingData: [Function: noopPendingOutput],
            agent: [Agent],
            socketPath: undefined,
            timeout: undefined,
            method: 'POST',
            path: '/transactions',
            _ended: true,
            res: [Circular],
            aborted: undefined,
            timeoutCb: null,
            upgradeOrConnect: false,
            parser: null,
            maxHeadersCount: null,
            [Symbol(isCorked)]: false,
            [Symbol(outHeadersKey)]: [Object] },
         text:
          '{"title":"March Salary","value":4000,"type":"income","category":"Salary"}' },
      request:
       Test {
         _events: {},
         _eventsCount: 0,
         _maxListeners: undefined,
         _agent: false,
         _formData: null,
         method: 'POST',
         url: 'http://127.0.0.1:45577/transactions',
         _header:
          { 'user-agent': 'node-superagent/3.8.3',
            'content-type': 'application/json' },
         header:
          { 'User-Agent': 'node-superagent/3.8.3',
            'Content-Type': 'application/json' },
         writable: true,
         _redirects: 0,
         _maxRedirects: 0,
         cookies: '',
         qs: {},
         _query: [],
         qsRaw: [],
         _redirectList: [],
         _streamRequest: false,
         _buffer: true,
         app:
          Server {
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 0,
            _handle: null,
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::0',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 529 },
         _asserts: [],
         _server:
          Server {
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 0,
            _handle: null,
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::0',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 529 },
         _data:
          { title: 'March Salary',
            type: 'income',
            value: 4000,
            category: 'Salary' },
         req:
          ClientRequest {
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: true,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: false,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: 73,
            _hasBody: true,
            _trailer: '',
            finished: true,
            _headerSent: true,
            socket: [Socket],
            connection: [Socket],
            _header:
             'POST /transactions HTTP/1.1\r\nHost: 127.0.0.1:45577\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 73\r\nConnection: close\r\n\r\n',
            _onPendingData: [Function: noopPendingOutput],
            agent: [Agent],
            socketPath: undefined,
            timeout: undefined,
            method: 'POST',
            path: '/transactions',
            _ended: true,
            res: [IncomingMessage],
            aborted: undefined,
            timeoutCb: null,
            upgradeOrConnect: false,
            parser: null,
            maxHeadersCount: null,
            [Symbol(isCorked)]: false,
            [Symbol(outHeadersKey)]: [Object] },
         protocol: 'http:',
         host: '127.0.0.1:45577',
         _endCalled: true,
         _callback: [Function],
         _fullfilledPromise: Promise { [Circular] },
         res:
          IncomingMessage {
            _readableState: [ReadableState],
            readable: false,
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            socket: [Socket],
            connection: [Socket],
            httpVersionMajor: 1,
            httpVersionMinor: 1,
            httpVersion: '1.1',
            complete: true,
            headers: [Object],
            rawHeaders: [Array],
            trailers: {},
            rawTrailers: [],
            aborted: false,
            upgrade: false,
            url: '',
            method: null,
            statusCode: 200,
            statusMessage: 'OK',
            client: [Socket],
            _consuming: false,
            _dumped: false,
            req: [ClientRequest],
            text:
             '{"title":"March Salary","value":4000,"type":"income","category":"Salary"}' },
         response: [Circular],
         called: true },
      req:
       ClientRequest {
         _events:
          { drain: [Function],
            error: [Function],
            prefinish: [Function: requestOnPrefinish] },
         _eventsCount: 3,
         _maxListeners: undefined,
         output: [],
         outputEncodings: [],
         outputCallbacks: [],
         outputSize: 0,
         writable: true,
         _last: true,
         chunkedEncoding: false,
         shouldKeepAlive: false,
         useChunkedEncodingByDefault: true,
         sendDate: false,
         _removedConnection: false,
         _removedContLen: false,
         _removedTE: false,
         _contentLength: 73,
         _hasBody: true,
         _trailer: '',
         finished: true,
         _headerSent: true,
         socket:
          Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 533,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0 },
         connection:
          Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 533,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0 },
         _header:
          'POST /transactions HTTP/1.1\r\nHost: 127.0.0.1:45577\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 73\r\nConnection: close\r\n\r\n',
         _onPendingData: [Function: noopPendingOutput],
         agent:
          Agent {
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            defaultPort: 80,
            protocol: 'http:',
            options: [Object],
            requests: {},
            sockets: [Object],
            freeSockets: {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256 },
         socketPath: undefined,
         timeout: undefined,
         method: 'POST',
         path: '/transactions',
         _ended: true,
         res:
          IncomingMessage {
            _readableState: [ReadableState],
            readable: false,
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            socket: [Socket],
            connection: [Socket],
            httpVersionMajor: 1,
            httpVersionMinor: 1,
            httpVersion: '1.1',
            complete: true,
            headers: [Object],
            rawHeaders: [Array],
            trailers: {},
            rawTrailers: [],
            aborted: false,
            upgrade: false,
            url: '',
            method: null,
            statusCode: 200,
            statusMessage: 'OK',
            client: [Socket],
            _consuming: false,
            _dumped: false,
            req: [Circular],
            text:
             '{"title":"March Salary","value":4000,"type":"income","category":"Salary"}' },
         aborted: undefined,
         timeoutCb: null,
         upgradeOrConnect: false,
         parser: null,
         maxHeadersCount: null,
         [Symbol(isCorked)]: false,
         [Symbol(outHeadersKey)]:
          { host: [Array],
            'accept-encoding': [Array],
            'user-agent': [Array],
            'content-type': [Array],
            'content-length': [Array] } },
      text:
       '{"title":"March Salary","value":4000,"type":"income","category":"Salary"}',
      body:
       { title: 'March Salary',
         value: 4000,
         type: 'income',
         category: 'Salary' },
      files: undefined,
      buffered: true,
      headers:
       { 'x-powered-by': 'Express',
         'content-type': 'application/json; charset=utf-8',
         'content-length': '73',
         etag: 'W/"49-b03SHY8pYeZ89ZokpjIWN0uHmT4"',
         date: 'Sun, 16 Aug 2020 23:30:31 GMT',
         connection: 'close' },
      header:
       { 'x-powered-by': 'Express',
         'content-type': 'application/json; charset=utf-8',
         'content-length': '73',
         etag: 'W/"49-b03SHY8pYeZ89ZokpjIWN0uHmT4"',
         date: 'Sun, 16 Aug 2020 23:30:31 GMT',
         connection: 'close' },
      statusCode: 200,
      status: 200,
      statusType: 2,
      info: false,
      ok: true,
      redirect: false,
      clientError: false,
      serverError: false,
      error: false,
      created: false,
      accepted: false,
      noContent: false,
      badRequest: false,
      unauthorized: false,
      notAcceptable: false,
      forbidden: false,
      notFound: false,
      unprocessableEntity: false,
      type: 'application/json',
      charset: 'utf-8',
      links: {},
      setEncoding: [Function: bound ],
      redirects: [] }

info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
